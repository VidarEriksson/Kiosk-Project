apiVersion: apps/v1
kind: Deployment
metadata:
  name: adminservice-deployment
  namespace: adminservice
  labels:
    app: adminservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: adminservice
  template:
    metadata:
      labels:
        app: adminservice
    spec:
      containers:
      - name: adminservice
        image: {{ .Values.image }}
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
        envFrom:
        - secretRef: 
            name: adminservice-secret
        - configMapRef:
            name: adminservice-configmap
        volumeMounts:
          - name: adminservice-storage
            mountPath: "/data"
        # livenessProbe:
        #   httpGet:
        #     path: /healthz
        #     port: http
        #   initialDelaySeconds: 30
        #   timeoutSeconds: 30
        # readinessProbe:
        #   httpGet:
        #     path: /healthz
        #     port: http
        #   initialDelaySeconds: 30
        #   timeoutSeconds: 30
      volumes:
        - name: adminservice-storage
          persistentVolumeClaim:
            claimName: adminservice-claim
